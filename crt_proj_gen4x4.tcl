#*****************************************************************************************
# Vivado (TM) v2022.1 (64-bit)
#
# crt_proj_gen4x4.tcl: Tcl script for re-creating project 'proj_gen4x4'
#
# Generated by Vivado on Sun Sep 18 22:54:00 MDT 2022
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (crt_proj_gen4x4.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/group/bcapps/chunxia/xuanwu/prj_gen4x4_slimsas/proj_gen4x4/proj_gen4x4.gen/sources_1/common/nsln/nocattrs.dat"
#    "/group/bcapps/chunxia/xuanwu/prj_gen4x4_slimsas/xdc/pcie_pin.xdc"
#    "/group/bcapps/chunxia/xuanwu/prj_gen4x4_slimsas/xdc/synth.xdc"
#    "/group/bcapps/chunxia/xuanwu/prj_gen4x4_slimsas/xdc/PBLOCK.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
 #"[file normalize "$origin_dir/proj_gen4x4/proj_gen4x4.gen/sources_1/common/nsln/nocattrs.dat"]"\

proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/xdc/pcie_pin.xdc"]"\
 "[file normalize "$origin_dir/xdc/synth.xdc"]"\
 "[file normalize "$origin_dir/xdc/PBLOCK.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "proj_gen4x4"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "crt_proj_gen4x4.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/proj_gen4x4"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcvm1802-vsvd1760-1MP-i-L -force

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/../../alveo_board"] [file normalize "$origin_dir/../../git_hub/U25N/U25N_fpga/U25_BOARD_FILES"] [file normalize "$origin_dir/../../git_hub/U25N/U25N_fpga/U25_BOARD_FILES/au25"]" -objects $obj
set_property -name "corecontainer.enable" -value "1" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_core_container" -value "1" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcvm1802-vsvd1760-1MP-i-L" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "7" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "7" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "7" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "7" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "7" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "7" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}


# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files


#set file "nsln/nocattrs.dat"
#set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
#set_property -name "file_type" -value "Data Files" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/xdc/pcie_pin.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "pcie_pin.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/xdc/synth.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "synth.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/xdc/PBLOCK.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "PBLOCK.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj

set_property -name "used_in_synthesis" -value "0" -objects $file_obj

#DEBUG:Chandler, enable/disable PBLOCK, 
#set_property is_enabled false [get_files */PBLOCK.xdc]

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *pcie_pin.xdc]" -objects $obj
set_property -name "target_part" -value "xcvm1802-vsvd1760-1MP-i-L" -objects $obj
set_property -name "target_ucf" -value "[get_files */pcie_pin.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj


# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:pcie_versal:1.0\
  xilinx.com:ip:versal_cips:3.2\
  xilinx.com:ip:util_ds_buf:2.2\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:gt_quad_base:1.1\
  xilinx.com:ip:pcie_phy_versal:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: pcie_versal_0_support
proc create_hier_cell_pcie_versal_0_support { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_pcie_versal_0_support() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 pcie_mgt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_refclk

  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_phy:phy_mac_command_rtl:1.0 phy_mac_command

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_phy:phy_mac_rx_rtl:1.0 phy_mac_rx

  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_phy:phy_mac_rx_margining_rtl:1.0 phy_mac_rx_margining

  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_phy:phy_mac_status_rtl:1.0 phy_mac_status

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_phy:phy_mac_tx_rtl:1.0 phy_mac_tx

  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_phy:phy_mac_tx_drive_rtl:1.0 phy_mac_tx_drive

  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_phy:phy_mac_tx_eq_rtl:1.0 phy_mac_tx_eq


  # Create pins
  create_bd_pin -dir O -from 0 -to 0 -type gt_usrclk BUFG_GT_O
  create_bd_pin -dir O -from 0 -to 0 -type clk IBUF_OUT
  create_bd_pin -dir I -from 5 -to 0 pcie_ltssm_state
  create_bd_pin -dir O -type clk phy_coreclk
  create_bd_pin -dir O -type clk phy_mcapclk
  create_bd_pin -dir O -type gt_usrclk phy_pclk
  create_bd_pin -dir O -type clk phy_userclk
  create_bd_pin -dir O -type clk phy_userclk2
  create_bd_pin -dir I -type rst sys_reset

  # Create instance: bufg_gt_sysclk, and set properties
  set bufg_gt_sysclk [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 bufg_gt_sysclk ]
  set_property -dict [ list \
   CONFIG.C_BUFG_GT_SYNC {true} \
   CONFIG.C_BUF_TYPE {BUFG_GT} \
 ] $bufg_gt_sysclk

  # Create instance: const_1b1, and set properties
  set const_1b1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 const_1b1 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {1} \
   CONFIG.CONST_WIDTH {1} \
 ] $const_1b1

  # Create instance: gt_quad_0, and set properties
  set gt_quad_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:gt_quad_base:1.1 gt_quad_0 ]
  set_property -dict [ list \
   CONFIG.PORTS_INFO_DICT {\
     LANE_SEL_DICT {PROT0 {RX0 RX1 RX2 RX3 TX0 TX1 TX2 TX3}}\
     GT_TYPE {GTY}\
     REG_CONF_INTF {APB3_INTF}\
     BOARD_PARAMETER {}\
   } \
   CONFIG.PROT_OUTCLK_VALUES {\
CH0_RXOUTCLK 500 CH0_TXOUTCLK 500 CH1_RXOUTCLK 500 CH1_TXOUTCLK 500\
CH2_RXOUTCLK 500 CH2_TXOUTCLK 500 CH3_RXOUTCLK 500 CH3_TXOUTCLK 500} \
   CONFIG.REFCLK_STRING {\
HSCLK0_LCPLLGTREFCLK0 refclk_PROT0_R0_100_MHz_unique1 HSCLK0_RPLLGTREFCLK0\
refclk_PROT0_R0_100_MHz_unique1 HSCLK1_LCPLLGTREFCLK0\
refclk_PROT0_R0_100_MHz_unique1 HSCLK1_RPLLGTREFCLK0\
refclk_PROT0_R0_100_MHz_unique1} \
 ] $gt_quad_0

  # Create instance: pcie_phy, and set properties
  set pcie_phy [ create_bd_cell -type ip -vlnv xilinx.com:ip:pcie_phy_versal:1.0 pcie_phy ]
  set_property -dict [ list \
   CONFIG.PL_LINK_CAP_MAX_LINK_SPEED {16.0_GT/s} \
   CONFIG.PL_LINK_CAP_MAX_LINK_WIDTH {X4} \
   CONFIG.aspm {No_ASPM} \
   CONFIG.async_mode {SRNS} \
   CONFIG.disable_double_pipe {YES} \
   CONFIG.en_gt_pclk {false} \
   CONFIG.ins_loss_profile {Add-in_Card} \
   CONFIG.lane_order {Bottom} \
   CONFIG.lane_reversal {false} \
   CONFIG.phy_async_en {true} \
   CONFIG.phy_coreclk_freq {500_MHz} \
   CONFIG.phy_refclk_freq {100_MHz} \
   CONFIG.phy_userclk2_freq {250_MHz} \
   CONFIG.phy_userclk_freq {250_MHz} \
   CONFIG.pipeline_stages {6} \
   CONFIG.sim_model {NO} \
   CONFIG.tx_preset {4} \
 ] $pcie_phy

  # Create instance: refclk_ibuf, and set properties
  set refclk_ibuf [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 refclk_ibuf ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $refclk_ibuf

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins phy_mac_command] [get_bd_intf_pins pcie_phy/phy_mac_command]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins phy_mac_rx] [get_bd_intf_pins pcie_phy/phy_mac_rx]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins phy_mac_rx_margining] [get_bd_intf_pins pcie_phy/phy_mac_rx_margining]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins phy_mac_status] [get_bd_intf_pins pcie_phy/phy_mac_status]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins phy_mac_tx] [get_bd_intf_pins pcie_phy/phy_mac_tx]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins phy_mac_tx_drive] [get_bd_intf_pins pcie_phy/phy_mac_tx_drive]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins phy_mac_tx_eq] [get_bd_intf_pins pcie_phy/phy_mac_tx_eq]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins pcie_refclk] [get_bd_intf_pins refclk_ibuf/CLK_IN_D]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins pcie_mgt] [get_bd_intf_pins pcie_phy/pcie_mgt]
  connect_bd_intf_net -intf_net gt_quad_0_GT0_BUFGT [get_bd_intf_pins gt_quad_0/GT0_BUFGT] [get_bd_intf_pins pcie_phy/GT_BUFGT]
  connect_bd_intf_net -intf_net gt_quad_0_GT_Serial [get_bd_intf_pins gt_quad_0/GT_Serial] [get_bd_intf_pins pcie_phy/GT0_Serial]
  connect_bd_intf_net -intf_net pcie_phy_GT_RX0 [get_bd_intf_pins gt_quad_0/RX0_GT_IP_Interface] [get_bd_intf_pins pcie_phy/GT_RX0]
  connect_bd_intf_net -intf_net pcie_phy_GT_RX1 [get_bd_intf_pins gt_quad_0/RX1_GT_IP_Interface] [get_bd_intf_pins pcie_phy/GT_RX1]
  connect_bd_intf_net -intf_net pcie_phy_GT_RX2 [get_bd_intf_pins gt_quad_0/RX2_GT_IP_Interface] [get_bd_intf_pins pcie_phy/GT_RX2]
  connect_bd_intf_net -intf_net pcie_phy_GT_RX3 [get_bd_intf_pins gt_quad_0/RX3_GT_IP_Interface] [get_bd_intf_pins pcie_phy/GT_RX3]
  connect_bd_intf_net -intf_net pcie_phy_GT_TX0 [get_bd_intf_pins gt_quad_0/TX0_GT_IP_Interface] [get_bd_intf_pins pcie_phy/GT_TX0]
  connect_bd_intf_net -intf_net pcie_phy_GT_TX1 [get_bd_intf_pins gt_quad_0/TX1_GT_IP_Interface] [get_bd_intf_pins pcie_phy/GT_TX1]
  connect_bd_intf_net -intf_net pcie_phy_GT_TX2 [get_bd_intf_pins gt_quad_0/TX2_GT_IP_Interface] [get_bd_intf_pins pcie_phy/GT_TX2]
  connect_bd_intf_net -intf_net pcie_phy_GT_TX3 [get_bd_intf_pins gt_quad_0/TX3_GT_IP_Interface] [get_bd_intf_pins pcie_phy/GT_TX3]
  connect_bd_intf_net -intf_net pcie_phy_gt_rxmargin_q0 [get_bd_intf_pins gt_quad_0/gt_rxmargin_intf] [get_bd_intf_pins pcie_phy/gt_rxmargin_q0]

  # Create port connections
  connect_bd_net -net bufg_gt_sysclk_BUFG_GT_O [get_bd_pins BUFG_GT_O] [get_bd_pins bufg_gt_sysclk/BUFG_GT_O] [get_bd_pins gt_quad_0/apb3clk] [get_bd_pins pcie_phy/phy_refclk]
  connect_bd_net -net const_1b1_dout [get_bd_pins bufg_gt_sysclk/BUFG_GT_CE] [get_bd_pins const_1b1/dout]
  connect_bd_net -net gt_quad_0_ch0_phyready [get_bd_pins gt_quad_0/ch0_phyready] [get_bd_pins pcie_phy/ch0_phyready]
  connect_bd_net -net gt_quad_0_ch0_phystatus [get_bd_pins gt_quad_0/ch0_phystatus] [get_bd_pins pcie_phy/ch0_phystatus]
  connect_bd_net -net gt_quad_0_ch0_rxoutclk [get_bd_pins gt_quad_0/ch0_rxoutclk] [get_bd_pins pcie_phy/gt_rxoutclk]
  connect_bd_net -net gt_quad_0_ch0_txoutclk [get_bd_pins gt_quad_0/ch0_txoutclk] [get_bd_pins pcie_phy/gt_txoutclk]
  connect_bd_net -net gt_quad_0_ch1_phyready [get_bd_pins gt_quad_0/ch1_phyready] [get_bd_pins pcie_phy/ch1_phyready]
  connect_bd_net -net gt_quad_0_ch1_phystatus [get_bd_pins gt_quad_0/ch1_phystatus] [get_bd_pins pcie_phy/ch1_phystatus]
  connect_bd_net -net gt_quad_0_ch2_phyready [get_bd_pins gt_quad_0/ch2_phyready] [get_bd_pins pcie_phy/ch2_phyready]
  connect_bd_net -net gt_quad_0_ch2_phystatus [get_bd_pins gt_quad_0/ch2_phystatus] [get_bd_pins pcie_phy/ch2_phystatus]
  connect_bd_net -net gt_quad_0_ch3_phyready [get_bd_pins gt_quad_0/ch3_phyready] [get_bd_pins pcie_phy/ch3_phyready]
  connect_bd_net -net gt_quad_0_ch3_phystatus [get_bd_pins gt_quad_0/ch3_phystatus] [get_bd_pins pcie_phy/ch3_phystatus]
  connect_bd_net -net pcie_ltssm_state_1 [get_bd_pins pcie_ltssm_state] [get_bd_pins pcie_phy/pcie_ltssm_state]
  connect_bd_net -net pcie_phy_gt_pcieltssm [get_bd_pins gt_quad_0/pcieltssm] [get_bd_pins pcie_phy/gt_pcieltssm]
  connect_bd_net -net pcie_phy_gtrefclk [get_bd_pins gt_quad_0/GT_REFCLK0] [get_bd_pins pcie_phy/gtrefclk]
  connect_bd_net -net pcie_phy_pcierstb [get_bd_pins gt_quad_0/ch0_pcierstb] [get_bd_pins gt_quad_0/ch1_pcierstb] [get_bd_pins gt_quad_0/ch2_pcierstb] [get_bd_pins gt_quad_0/ch3_pcierstb] [get_bd_pins pcie_phy/pcierstb]
  connect_bd_net -net pcie_phy_phy_coreclk [get_bd_pins phy_coreclk] [get_bd_pins pcie_phy/phy_coreclk]
  connect_bd_net -net pcie_phy_phy_mcapclk [get_bd_pins phy_mcapclk] [get_bd_pins pcie_phy/phy_mcapclk]
  connect_bd_net -net pcie_phy_phy_pclk [get_bd_pins phy_pclk] [get_bd_pins gt_quad_0/ch0_rxusrclk] [get_bd_pins gt_quad_0/ch0_txusrclk] [get_bd_pins gt_quad_0/ch1_rxusrclk] [get_bd_pins gt_quad_0/ch1_txusrclk] [get_bd_pins gt_quad_0/ch2_rxusrclk] [get_bd_pins gt_quad_0/ch2_txusrclk] [get_bd_pins gt_quad_0/ch3_rxusrclk] [get_bd_pins gt_quad_0/ch3_txusrclk] [get_bd_pins pcie_phy/phy_pclk]
  connect_bd_net -net pcie_phy_phy_userclk [get_bd_pins phy_userclk] [get_bd_pins pcie_phy/phy_userclk]
  connect_bd_net -net pcie_phy_phy_userclk2 [get_bd_pins phy_userclk2] [get_bd_pins pcie_phy/phy_userclk2]
  connect_bd_net -net refclk_ibuf_IBUF_DS_ODIV2 [get_bd_pins bufg_gt_sysclk/BUFG_GT_I] [get_bd_pins refclk_ibuf/IBUF_DS_ODIV2]
  connect_bd_net -net refclk_ibuf_IBUF_OUT [get_bd_pins IBUF_OUT] [get_bd_pins pcie_phy/phy_gtrefclk] [get_bd_pins refclk_ibuf/IBUF_OUT]
  connect_bd_net -net sys_reset_1 [get_bd_pins sys_reset] [get_bd_pins pcie_phy/phy_rst_n]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set CH0_DDR4_0_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 CH0_DDR4_0_0 ]

  set pcie_mgt [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 pcie_mgt ]

  set pcie_refclk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_refclk ]

  set sys_clk0_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 sys_clk0_0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {400000000} \
   ] $sys_clk0_0


  # Create ports
  set sys_reset [ create_bd_port -dir I -type rst sys_reset ]

  # Create instance: pcie_versal_0, and set properties
  set pcie_versal_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:pcie_versal:1.0 pcie_versal_0 ]
  set_property -dict [ list \
   CONFIG.AXISTEN_IF_EXT_512_RQ_STRADDLE {false} \
   CONFIG.AXISTEN_IF_RC_STRADDLE {true} \
   CONFIG.PF0_CLASS_CODE {060A00} \
   CONFIG.PF0_DEVICE_ID {B0C4} \
   CONFIG.PF0_SRIOV_VF_DEVICE_ID {C044} \
   CONFIG.PF1_CLASS_CODE {060A00} \
   CONFIG.PF1_SRIOV_VF_DEVICE_ID {C144} \
   CONFIG.PF2_CLASS_CODE {060A00} \
   CONFIG.PF2_DEVICE_ID {B2C4} \
   CONFIG.PF2_SRIOV_VF_DEVICE_ID {C244} \
   CONFIG.PF3_CLASS_CODE {060A00} \
   CONFIG.PF3_DEVICE_ID {B3C4} \
   CONFIG.PF3_SRIOV_VF_DEVICE_ID {C344} \
   CONFIG.PF4_CLASS_CODE {060A00} \
   CONFIG.PF4_DEVICE_ID {B4C4} \
   CONFIG.PF4_SRIOV_VF_DEVICE_ID {C444} \
   CONFIG.PF5_CLASS_CODE {060A00} \
   CONFIG.PF5_DEVICE_ID {B5C4} \
   CONFIG.PF5_SRIOV_VF_DEVICE_ID {C544} \
   CONFIG.PF6_CLASS_CODE {060A00} \
   CONFIG.PF6_DEVICE_ID {B6C4} \
   CONFIG.PF6_SRIOV_VF_DEVICE_ID {C644} \
   CONFIG.PF7_CLASS_CODE {060A00} \
   CONFIG.PF7_DEVICE_ID {B7C4} \
   CONFIG.PF7_SRIOV_VF_DEVICE_ID {C744} \
   CONFIG.PL_LINK_CAP_MAX_LINK_WIDTH {X4} \
   CONFIG.axisten_if_width {256_bit} \
   CONFIG.bmd_pio_mode {false} \
   CONFIG.device_port_type {Root_Port_of_PCI_Express_Root_Complex} \
   CONFIG.pcie_blk_locn {X0Y2} \
   CONFIG.pf0_base_class_menu {Bridge_device} \
   CONFIG.pf0_class_code_base {06} \
   CONFIG.pf0_class_code_sub {0A} \
   CONFIG.pf0_sub_class_interface_menu {InfiniBand_to_PCI_host_bridge} \
   CONFIG.pf1_base_class_menu {Bridge_device} \
   CONFIG.pf1_class_code_base {06} \
   CONFIG.pf1_class_code_sub {0A} \
   CONFIG.pf1_sub_class_interface_menu {InfiniBand_to_PCI_host_bridge} \
   CONFIG.pf2_base_class_menu {Bridge_device} \
   CONFIG.pf2_class_code_base {06} \
   CONFIG.pf2_class_code_sub {0A} \
   CONFIG.pf2_sub_class_interface_menu {InfiniBand_to_PCI_host_bridge} \
   CONFIG.pf3_base_class_menu {Bridge_device} \
   CONFIG.pf3_class_code_base {06} \
   CONFIG.pf3_class_code_sub {0A} \
   CONFIG.pf3_sub_class_interface_menu {InfiniBand_to_PCI_host_bridge} \
   CONFIG.pf4_base_class_menu {Bridge_device} \
   CONFIG.pf4_class_code_base {06} \
   CONFIG.pf4_class_code_sub {0A} \
   CONFIG.pf4_sub_class_interface_menu {InfiniBand_to_PCI_host_bridge} \
   CONFIG.pf5_base_class_menu {Bridge_device} \
   CONFIG.pf5_class_code_base {06} \
   CONFIG.pf5_class_code_sub {0A} \
   CONFIG.pf5_sub_class_interface_menu {InfiniBand_to_PCI_host_bridge} \
   CONFIG.pf6_base_class_menu {Bridge_device} \
   CONFIG.pf6_class_code_base {06} \
   CONFIG.pf6_class_code_sub {0A} \
   CONFIG.pf6_sub_class_interface_menu {InfiniBand_to_PCI_host_bridge} \
   CONFIG.pf7_base_class_menu {Bridge_device} \
   CONFIG.pf7_class_code_base {06} \
   CONFIG.pf7_class_code_sub {0A} \
   CONFIG.pf7_sub_class_interface_menu {InfiniBand_to_PCI_host_bridge} \
   CONFIG.type1_membase_memlimit_enable {Enabled} \
   CONFIG.type1_prefetchable_membase_memlimit {64bit_Enabled} \
   CONFIG.userclk2_freq {500} \
 ] $pcie_versal_0

  # Create instance: pcie_versal_0_support
  create_hier_cell_pcie_versal_0_support [current_bd_instance .] pcie_versal_0_support

  # Create instance: versal_cips_0, and set properties
  set versal_cips_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:versal_cips:3.2 versal_cips_0 ]
  set_property -dict [ list \
   CONFIG.BOOT_MODE {Custom} \
   CONFIG.DDR_MEMORY_MODE {Enable} \
   CONFIG.DESIGN_MODE {1} \
   CONFIG.PS_PMC_CONFIG {\
     DDR_MEMORY_MODE {Connectivity to DDR via NOC}\
     PMC_USE_PMC_NOC_AXI0 {1}\
     PS_NUM_FABRIC_RESETS {1}\
     PS_USE_FPD_CCI_NOC {1}\
     PS_USE_FPD_CCI_NOC0 {1}\
     PS_USE_NOC_LPD_AXI0 {1}\
     PS_USE_PMCPL_CLK0 {1}\
     SMON_ALARMS {Set_Alarms_On}\
     SMON_ENABLE_TEMP_AVERAGING {0}\
     SMON_TEMP_AVERAGING_SAMPLES {0}\
   } \
   CONFIG.PS_PMC_CONFIG_APPLIED {1} \
 ] $versal_cips_0

  # Create interface connections
  connect_bd_intf_net -intf_net pcie_refclk_1 [get_bd_intf_ports pcie_refclk] [get_bd_intf_pins pcie_versal_0_support/pcie_refclk]
  connect_bd_intf_net -intf_net pcie_versal_0_phy_mac_rx [get_bd_intf_pins pcie_versal_0/phy_mac_rx] [get_bd_intf_pins pcie_versal_0_support/phy_mac_rx]
  connect_bd_intf_net -intf_net pcie_versal_0_phy_mac_tx [get_bd_intf_pins pcie_versal_0/phy_mac_tx] [get_bd_intf_pins pcie_versal_0_support/phy_mac_tx]
  connect_bd_intf_net -intf_net pcie_versal_0_support_pcie_mgt [get_bd_intf_ports pcie_mgt] [get_bd_intf_pins pcie_versal_0_support/pcie_mgt]
  connect_bd_intf_net -intf_net pcie_versal_0_support_phy_mac_command [get_bd_intf_pins pcie_versal_0/phy_mac_command] [get_bd_intf_pins pcie_versal_0_support/phy_mac_command]
  connect_bd_intf_net -intf_net pcie_versal_0_support_phy_mac_rx_margining [get_bd_intf_pins pcie_versal_0/phy_mac_rx_margining] [get_bd_intf_pins pcie_versal_0_support/phy_mac_rx_margining]
  connect_bd_intf_net -intf_net pcie_versal_0_support_phy_mac_status [get_bd_intf_pins pcie_versal_0/phy_mac_status] [get_bd_intf_pins pcie_versal_0_support/phy_mac_status]
  connect_bd_intf_net -intf_net pcie_versal_0_support_phy_mac_tx_drive [get_bd_intf_pins pcie_versal_0/phy_mac_tx_drive] [get_bd_intf_pins pcie_versal_0_support/phy_mac_tx_drive]
  connect_bd_intf_net -intf_net pcie_versal_0_support_phy_mac_tx_eq [get_bd_intf_pins pcie_versal_0/phy_mac_tx_eq] [get_bd_intf_pins pcie_versal_0_support/phy_mac_tx_eq]

  # Create port connections
  connect_bd_net -net pcie_versal_0_pcie_ltssm_state [get_bd_pins pcie_versal_0/pcie_ltssm_state] [get_bd_pins pcie_versal_0_support/pcie_ltssm_state]
  connect_bd_net -net pcie_versal_0_support_BUFG_GT_O [get_bd_pins pcie_versal_0/sys_clk] [get_bd_pins pcie_versal_0_support/BUFG_GT_O]
  connect_bd_net -net pcie_versal_0_support_IBUF_OUT [get_bd_pins pcie_versal_0/sys_clk_gt] [get_bd_pins pcie_versal_0_support/IBUF_OUT]
  connect_bd_net -net pcie_versal_0_support_phy_coreclk [get_bd_pins pcie_versal_0/phy_coreclk] [get_bd_pins pcie_versal_0_support/phy_coreclk]
  connect_bd_net -net pcie_versal_0_support_phy_mcapclk [get_bd_pins pcie_versal_0/phy_mcapclk] [get_bd_pins pcie_versal_0_support/phy_mcapclk]
  connect_bd_net -net pcie_versal_0_support_phy_pclk [get_bd_pins pcie_versal_0/phy_pclk] [get_bd_pins pcie_versal_0_support/phy_pclk]
  connect_bd_net -net pcie_versal_0_support_phy_userclk [get_bd_pins pcie_versal_0/phy_userclk] [get_bd_pins pcie_versal_0_support/phy_userclk]
  connect_bd_net -net pcie_versal_0_support_phy_userclk2 [get_bd_pins pcie_versal_0/phy_userclk2] [get_bd_pins pcie_versal_0_support/phy_userclk2]
  connect_bd_net -net sys_reset_1 [get_bd_ports sys_reset] [get_bd_pins pcie_versal_0/sys_reset] [get_bd_pins pcie_versal_0_support/sys_reset]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Interfaces View",
   "Default View_ScaleFactor":"0.338279",
   "Default View_TopLeft":"1191,-429",
   "Display-PortTypeClock":"false",
   "Display-PortTypeGtOutClock":"false",
   "Display-PortTypeGtUsrClock":"false",
   "Display-PortTypeOthers":"false",
   "Display-PortTypeReset":"false",
   "ExpandedHierarchyInLayout":"/pcie_versal_0_support",
   "HideNet":"/versal_cips_0_fpd_cci_noc_axi3_clk|/pcie_versal_0_support/pcie_phy_phy_userclk2|/pcie_versal_0_support/pcie_phy_phy_userclk|/pcie_versal_0_support/gt_quad_0_ch0_rxoutclk|/sys_reset_1|/pcie_versal_0_support/refclk_ibuf_IBUF_DS_ODIV2|/versal_cips_0_fpd_cci_noc_axi1_clk|/versal_cips_0_fpd_cci_noc_axi0_clk|/pcie_versal_0_support/pcie_phy_phy_mcapclk|/pcie_versal_0_support/pcie_phy_phy_coreclk|/pcie_versal_0_support/refclk_ibuf_IBUF_OUT|/versal_cips_0_lpd_axi_noc_clk|/pcie_versal_0_support/gt_quad_0_ch0_txoutclk|/pcie_versal_0_support/bufg_gt_sysclk_BUFG_GT_O|/pcie_versal_0_support/pcie_phy_gtrefclk|/pcie_versal_0_support/pcie_phy_phy_pclk|/versal_cips_0_pmc_axi_noc_axi0_clk|/versal_cips_0_fpd_cci_noc_axi2_clk|",
   "Interfaces View_ExpandedHierarchyInLayout":"",
   "Interfaces View_Layers":"/versal_cips_0_fpd_cci_noc_axi3_clk:false|/pcie_versal_0_support/pcie_phy_phy_userclk2:false|/pcie_versal_0_support/pcie_phy_phy_userclk:false|/pcie_versal_0_support/gt_quad_0_ch0_rxoutclk:false|/sys_reset_1:false|/pcie_versal_0_support/refclk_ibuf_IBUF_DS_ODIV2:false|/versal_cips_0_fpd_cci_noc_axi1_clk:false|/versal_cips_0_fpd_cci_noc_axi0_clk:false|/pcie_versal_0_support/pcie_phy_phy_mcapclk:false|/pcie_versal_0_support/pcie_phy_phy_coreclk:false|/pcie_versal_0_support/refclk_ibuf_IBUF_OUT:false|/versal_cips_0_lpd_axi_noc_clk:false|/pcie_versal_0_support/gt_quad_0_ch0_txoutclk:false|/pcie_versal_0_support/bufg_gt_sysclk_BUFG_GT_O:false|/pcie_versal_0_support/pcie_phy_gtrefclk:false|/pcie_versal_0_support/pcie_phy_phy_pclk:false|/versal_cips_0_pmc_axi_noc_axi0_clk:false|/versal_cips_0_fpd_cci_noc_axi2_clk:false|",
   "Interfaces View_Layout":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port pcie_refclk -pg 1 -lvl 0 -x -10 -y 40 -defaultsOSRD
preplace port pcie_mgt -pg 1 -lvl 4 -x 2560 -y 190 -defaultsOSRD
preplace inst pcie_versal_0_support -pg 1 -lvl 3 -x 1190 -y 142 -defaultsOSRD
preplace inst pcie_versal_0 -pg 1 -lvl 1 -x 250 -y 200 -defaultsOSRD
preplace netloc pcie_versal_0_pcie_ltssm_state 1 1 2 430J -240n 1080
preplace netloc pcie_versal_0_support_BUFG_GT_O 1 0 4 -50 1694n NJ 1694n NJ 1694n 3060
preplace netloc pcie_versal_0_support_IBUF_OUT 1 0 4 0 1654n NJ 1654n NJ 1654n 3050
preplace netloc pcie_versal_0_support_phy_coreclk 1 0 4 -30 1704n NJ 1704n NJ 1704n 3120
preplace netloc pcie_versal_0_support_phy_mcapclk 1 0 4 -20 1724n NJ 1724n NJ 1724n 3150
preplace netloc pcie_versal_0_support_phy_pclk 1 0 4 -90 1734n NJ 1734n NJ 1734n 3140
preplace netloc pcie_versal_0_support_phy_userclk 1 0 4 -60 1744n NJ 1744n NJ 1744n 3130
preplace netloc pcie_versal_0_support_phy_userclk2 1 0 4 10 1684n NJ 1684n NJ 1684n 3070
preplace netloc sys_reset_1 1 0 3 -110 -310n NJ -310n 1090J
preplace netloc pcie_refclk_1 1 0 3 10J 20 NJ 20 520J
preplace netloc pcie_versal_0_phy_mac_rx 1 1 2 430J 150 500
preplace netloc pcie_versal_0_phy_mac_tx 1 1 2 NJ 160 510
preplace netloc pcie_versal_0_support_pcie_mgt 1 3 1 1370 190n
preplace netloc pcie_versal_0_support_phy_mac_command 1 0 4 30 10 NJ 10 NJ 10 1360
preplace netloc pcie_versal_0_support_phy_mac_rx_margining 1 0 4 20 30 NJ 30 500J 32 1350
preplace netloc pcie_versal_0_support_phy_mac_status 1 0 4 40 40 NJ 40 530J 22 1370
preplace netloc pcie_versal_0_support_phy_mac_tx_drive 1 0 4 30 360 NJ 360 NJ 360 1360
preplace netloc pcie_versal_0_support_phy_mac_tx_eq 1 0 4 40 370 NJ 370 NJ 370 1350
levelinfo -pg 1 -10 250 480 1190 2560
pagesize -pg 1 -db -bbox -sgen -140 0 2670 1880
",
   "Interfaces View_ScaleFactor":"0.216477",
   "Interfaces View_TopLeft":"-337,9",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port CH0_DDR4_0_0 -pg 1 -lvl 4 -x 3200 -y -40 -defaultsOSRD
preplace port sys_clk0_0 -pg 1 -lvl 0 -x -130 -y 160 -defaultsOSRD
preplace port pcie_refclk -pg 1 -lvl 0 -x -130 -y -330 -defaultsOSRD
preplace port pcie_mgt -pg 1 -lvl 4 -x 3200 -y -260 -defaultsOSRD
preplace port port-id_sys_reset -pg 1 -lvl 0 -x -130 -y -310 -defaultsOSRD
preplace inst versal_cips_0 -pg 1 -lvl 2 -x 700 -y -30 -defaultsOSRD
preplace inst axi_noc_0 -pg 1 -lvl 3 -x 1540 -y 1454 -defaultsOSRD
preplace inst pcie_versal_0 -pg 1 -lvl 1 -x 220 -y -70 -defaultsOSRD
preplace inst pcie_versal_0_support -pg 1 -lvl 3 -x 1540 -y -246 -defaultsOSRD
preplace inst pcie_versal_0_support|pcie_phy -pg 1 -lvl 3 -x 2470 -y 294 -defaultsOSRD
preplace inst pcie_versal_0_support|const_1b1 -pg 1 -lvl 1 -x 1490 -y 844 -defaultsOSRD
preplace inst pcie_versal_0_support|bufg_gt_sysclk -pg 1 -lvl 2 -x 1910 -y 874 -defaultsOSRD
preplace inst pcie_versal_0_support|refclk_ibuf -pg 1 -lvl 2 -x 1910 -y 1084 -defaultsOSRD
preplace inst pcie_versal_0_support|gt_quad_0 -pg 1 -lvl 2 -x 1910 -y 234 -defaultsOSRD
preplace netloc versal_cips_0_fpd_cci_noc_axi0_clk 1 2 1 1010 0n
preplace netloc versal_cips_0_fpd_cci_noc_axi1_clk 1 2 1 1000 20n
preplace netloc versal_cips_0_fpd_cci_noc_axi2_clk 1 2 1 990 40n
preplace netloc versal_cips_0_fpd_cci_noc_axi3_clk 1 2 1 980 60n
preplace netloc versal_cips_0_lpd_axi_noc_clk 1 2 1 970 80n
preplace netloc versal_cips_0_pmc_axi_noc_axi0_clk 1 2 1 960 100n
preplace netloc pcie_versal_0_pcie_ltssm_state 1 1 2 430J -240 1080
preplace netloc pcie_versal_0_support_phy_coreclk 1 0 4 -30 1704 NJ 1704 NJ 1704 3120
preplace netloc pcie_versal_0_support_phy_mcapclk 1 0 4 -20 1724 NJ 1724 NJ 1724 3150
preplace netloc pcie_versal_0_support_phy_pclk 1 0 4 -90 1734 NJ 1734 NJ 1734 3140
preplace netloc pcie_versal_0_support_phy_userclk 1 0 4 -60 1744 NJ 1744 NJ 1744 3130
preplace netloc pcie_versal_0_support_phy_userclk2 1 0 4 10 1684 NJ 1684 NJ 1684 3070
preplace netloc sys_reset_1 1 0 3 -110 -310 NJ -310 1090J
preplace netloc pcie_versal_0_support_BUFG_GT_O 1 0 4 -50 1694 NJ 1694 NJ 1694 3060
preplace netloc pcie_versal_0_support_IBUF_OUT 1 0 4 0 1654 NJ 1654 NJ 1654 3050
preplace netloc versal_cips_0_FPD_CCI_NOC_0 1 2 1 1070 -160n
preplace netloc versal_cips_0_FPD_CCI_NOC_1 1 2 1 1060 -140n
preplace netloc versal_cips_0_FPD_CCI_NOC_2 1 2 1 1050 -120n
preplace netloc versal_cips_0_FPD_CCI_NOC_3 1 2 1 1040 -100n
preplace netloc versal_cips_0_LPD_AXI_NOC_0 1 2 1 1030 -80n
preplace netloc versal_cips_0_PMC_NOC_AXI_0 1 2 1 1020 -60n
preplace netloc axi_noc_0_CH0_DDR4_0 1 3 1 3180 -40n
preplace netloc sys_clk0_0_1 1 0 3 -110J 170 430 1454 NJ
preplace netloc pcie_versal_0_support_phy_mac_command 1 0 4 -40 1634 NJ 1634 NJ 1634 3090
preplace netloc pcie_versal_0_phy_mac_rx 1 1 2 440J -220 1100
preplace netloc pcie_versal_0_support_phy_mac_rx_margining 1 0 4 -10 1644 NJ 1644 NJ 1644 3080
preplace netloc pcie_versal_0_support_phy_mac_status 1 0 4 -80 1664 NJ 1664 NJ 1664 3110
preplace netloc pcie_versal_0_phy_mac_tx 1 1 2 420J -230 1110
preplace netloc pcie_versal_0_support_phy_mac_tx_drive 1 0 4 -70 1674 NJ 1674 NJ 1674 3100
preplace netloc pcie_versal_0_support_phy_mac_tx_eq 1 0 4 -100 1714 NJ 1714 NJ 1714 3160
preplace netloc pcie_refclk_1 1 0 3 NJ -330 NJ -330 1120J
preplace netloc pcie_versal_0_support_pcie_mgt 1 3 1 3170 -260n
preplace netloc pcie_versal_0_support|pcie_ltssm_state_1 1 0 3 NJ 1194 NJ 1194 2240
preplace netloc pcie_versal_0_support|pcie_phy_phy_coreclk 1 3 1 2820 184n
preplace netloc pcie_versal_0_support|pcie_phy_phy_mcapclk 1 3 1 2850 204n
preplace netloc pcie_versal_0_support|pcie_phy_phy_pclk 1 1 3 1640 1214 2220J -56 2770
preplace netloc pcie_versal_0_support|pcie_phy_phy_userclk 1 3 1 2840 244n
preplace netloc pcie_versal_0_support|pcie_phy_phy_userclk2 1 3 1 2860 264n
preplace netloc pcie_versal_0_support|sys_reset_1 1 0 3 NJ 1214 1570J 1224 2270
preplace netloc pcie_versal_0_support|const_1b1_dout 1 1 1 NJ 844
preplace netloc pcie_versal_0_support|refclk_ibuf_IBUF_OUT 1 2 2 2140 -46 2810J
preplace netloc pcie_versal_0_support|bufg_gt_sysclk_BUFG_GT_O 1 1 3 1670 1204 2180 -66 2830J
preplace netloc pcie_versal_0_support|refclk_ibuf_IBUF_DS_ODIV2 1 1 2 1680 1184 2140
preplace netloc pcie_versal_0_support|gt_quad_0_ch0_txoutclk 1 2 1 2170 134n
preplace netloc pcie_versal_0_support|gt_quad_0_ch0_rxoutclk 1 2 1 2190 154n
preplace netloc pcie_versal_0_support|pcie_phy_gtrefclk 1 1 3 1630 1244 NJ 1244 2700
preplace netloc pcie_versal_0_support|pcie_phy_pcierstb 1 1 3 1580 1254 NJ 1254 2690
preplace netloc pcie_versal_0_support|pcie_phy_gt_pcieltssm 1 1 3 1590 1234 NJ 1234 2670
preplace netloc pcie_versal_0_support|gt_quad_0_ch0_phyready 1 1 2 1620 1174 2250J
preplace netloc pcie_versal_0_support|gt_quad_0_ch0_phystatus 1 2 1 N 274
preplace netloc pcie_versal_0_support|gt_quad_0_ch1_phyready 1 1 2 1650 1164 2260J
preplace netloc pcie_versal_0_support|gt_quad_0_ch1_phystatus 1 2 1 N 294
preplace netloc pcie_versal_0_support|gt_quad_0_ch2_phyready 1 1 2 1570 -386 2230J
preplace netloc pcie_versal_0_support|gt_quad_0_ch2_phystatus 1 2 1 N 314
preplace netloc pcie_versal_0_support|gt_quad_0_ch3_phyready 1 1 2 1580 -376 2200J
preplace netloc pcie_versal_0_support|gt_quad_0_ch3_phystatus 1 2 1 N 334
preplace netloc pcie_versal_0_support|Conn1 1 3 1 2790 64n
preplace netloc pcie_versal_0_support|Conn2 1 0 3 NJ 974 1570J 984 2160
preplace netloc pcie_versal_0_support|Conn3 1 3 1 2800 84n
preplace netloc pcie_versal_0_support|Conn4 1 3 1 N 104
preplace netloc pcie_versal_0_support|Conn5 1 0 3 NJ 994 NJ 994 2150
preplace netloc pcie_versal_0_support|Conn6 1 3 1 N 124
preplace netloc pcie_versal_0_support|Conn7 1 3 1 N 144
preplace netloc pcie_versal_0_support|Conn8 1 0 2 NJ 1074 N
preplace netloc pcie_versal_0_support|Conn9 1 3 1 2780 64n
preplace netloc pcie_versal_0_support|gt_quad_0_GT0_BUFGT 1 2 1 2210 -26n
preplace netloc pcie_versal_0_support|pcie_phy_GT_RX0 1 1 3 1620 -366 NJ -366 2730
preplace netloc pcie_versal_0_support|pcie_phy_GT_TX0 1 1 3 1680 -316 NJ -316 2680
preplace netloc pcie_versal_0_support|pcie_phy_GT_RX1 1 1 3 1630 -356 NJ -356 2760
preplace netloc pcie_versal_0_support|pcie_phy_GT_TX1 1 1 3 1660 -326 NJ -326 2710
preplace netloc pcie_versal_0_support|pcie_phy_GT_RX2 1 1 3 1640 -346 NJ -346 2750
preplace netloc pcie_versal_0_support|pcie_phy_GT_TX2 1 1 3 1610 1154 NJ 1154 2710
preplace netloc pcie_versal_0_support|pcie_phy_GT_RX3 1 1 3 1650 -336 NJ -336 2740
preplace netloc pcie_versal_0_support|pcie_phy_GT_TX3 1 1 3 1660 1004 NJ 1004 2680
preplace netloc pcie_versal_0_support|gt_quad_0_GT_Serial 1 2 1 2130 54n
preplace netloc pcie_versal_0_support|pcie_phy_gt_rxmargin_q0 1 1 3 1600 1014 NJ 1014 2720
levelinfo -pg 1 -130 220 700 1540 3200
levelinfo -hier pcie_versal_0_support * 1490 1910 2470 *
pagesize -pg 1 -db -bbox -sgen -260 -430 3360 1760
pagesize -hier pcie_versal_0_support -db -bbox -sgen 1380 -396 2890 1264
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property GENERATE_SYNTH_CHECKPOINT "0" [get_files design_1.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
#if { [get_property IS_LOCKED [ get_files -norecurse design_1.bd] ] == 1  } {
#  import_files -fileset sources_1 [file normalize "${origin_dir}/proj_gen4x4/proj_gen4x4.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v" ]
#} else {
#  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
#  add_files -norecurse -fileset sources_1 $wrapper_path
#}

set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
add_files -norecurse -fileset sources_1 $wrapper_path

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcvm1802-vsvd1760-1MP-i-L -flow {Vivado Synthesis 2022} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2022" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xcvm1802-vsvd1760-1MP-i-L" -objects $obj
#set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'synth2_-1l' run (if not found)
if {[string equal [get_runs -quiet synth2_-1l] ""]} {
    create_run -name synth2_-1l -part xcvm1802-vfvc1760-1LP-e-S -flow {Vivado Synthesis 2022} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth2_-1l]
  set_property flow "Vivado Synthesis 2022" [get_runs synth2_-1l]
}
set obj [get_runs synth2_-1l]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth2_-1l_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth2_-1l] synth2_-1l_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth2_-1l_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth2_-1l
}
set obj [get_report_configs -of_objects [get_runs synth2_-1l] synth2_-1l_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth2_-1l]
set_property -name "part" -value "xcvm1802-vfvc1760-1LP-e-S" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'synth_2' run (if not found)
if {[string equal [get_runs -quiet synth_2] ""]} {
    create_run -name synth_2 -part xcvm1802-vfvc1760-2MP-e-L -flow {Vivado Synthesis 2022} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_2]
  set_property flow "Vivado Synthesis 2022" [get_runs synth_2]
}
set obj [get_runs synth_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_2_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_2] synth_2_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_2_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_2
}
set obj [get_report_configs -of_objects [get_runs synth_2] synth_2_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_2]
set_property -name "part" -value "xcvm1802-vfvc1760-2MP-e-L" -objects $obj
#set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth2_-1l]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcvm1802-vsvd1760-1MP-i-L -flow {Vivado Implementation 2022} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2022" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xcvm1802-vsvd1760-1MP-i-L" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_device_image.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_device_image.args.verbose" -value "0" -objects $obj

# Create 'impl_3' run (if not found)
if {[string equal [get_runs -quiet impl_3] ""]} {
    create_run -name impl_3 -part xcvm1802-vfvc1760-1LP-e-S -flow {Vivado Implementation 2022} -strategy "Performance_NetDelay_high" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth2_-1l
} else {
  set_property strategy "Performance_NetDelay_high" [get_runs impl_3]
  set_property flow "Vivado Implementation 2022" [get_runs impl_3]
}
set obj [get_runs impl_3]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_3_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_3_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_3_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_3_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_3_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_3_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_io_0] "" ] } {
  create_report_config -report_name impl_3_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_3_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_3_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_3_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_3_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_3_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_3_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_3_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_3_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_3_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_3_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_3_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_3_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_3_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_3_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_power_0] "" ] } {
  create_report_config -report_name impl_3_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_3_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_3_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_3_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_3_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_3_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_3_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_3_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_3_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_3]
set_property -name "part" -value "xcvm1802-vfvc1760-1LP-e-S" -objects $obj
set_property -name "strategy" -value "Performance_NetDelay_high" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraNetDelay_high" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "AggressiveExplore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_device_image.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_device_image.args.verbose" -value "0" -objects $obj

# Create 'impl_4' run (if not found)
if {[string equal [get_runs -quiet impl_4] ""]} {
    create_run -name impl_4 -part xcvm1802-vfvc1760-1LP-e-S -flow {Vivado Implementation 2022} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth2_-1l
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_4]
  set_property flow "Vivado Implementation 2022" [get_runs impl_4]
}
set obj [get_runs impl_4]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_4_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_4_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_4_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_4_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_4_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_4_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_io_0] "" ] } {
  create_report_config -report_name impl_4_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_4_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_4_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_4_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_4_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_4_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_4_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_4_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_4_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_4_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_4_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_4_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_4_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_4_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_4_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_power_0] "" ] } {
  create_report_config -report_name impl_4_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_4_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_4_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_4_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_4_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_4_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_4_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_4_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_4_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_4]
set_property -name "part" -value "xcvm1802-vfvc1760-1LP-e-S" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_device_image.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_device_image.args.verbose" -value "0" -objects $obj

# Create 'impl_5' run (if not found)
if {[string equal [get_runs -quiet impl_5] ""]} {
    create_run -name impl_5 -part xcvm1802-vfvc1760-2MP-e-L -flow {Vivado Implementation 2022} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_2
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_5]
  set_property flow "Vivado Implementation 2022" [get_runs impl_5]
}
set obj [get_runs impl_5]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_5_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_5_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_5_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_5_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_5_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_5_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_io_0] "" ] } {
  create_report_config -report_name impl_5_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_5_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_5_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_5_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_5_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_5_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_5_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_5_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_5_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_5_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_5_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_5_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_5_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_5_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_5_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_power_0] "" ] } {
  create_report_config -report_name impl_5_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_5_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_5_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_5_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_5_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_5_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_5_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_5_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_5_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_5]
set_property -name "part" -value "xcvm1802-vfvc1760-2MP-e-L" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_device_image.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_device_image.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_3]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1

launch_runs -jobs 24 [get_runs]
wait_on_runs [get_runs] -exit_condition ALL
